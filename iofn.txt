#include <avr/io.h>

#define clrbit(var,bit) var &= ~(1<<bit)
#define setbit(var,bit) var |= 1<<bit
#define NOKEY 0x7f 

#define E  7
#define RW 6
#define RS 5

#define IReg 0
#define SReg 0
#define DReg 1

#define nop asm("nop"::);

volatile unsigned long int delay;

void wait(unsigned long int val){
   for(delay=0;delay<val;delay++){}
}

unsigned char rd_LCDreg(unsigned char vRS){
   unsigned char data;
   DDRD=0;
   if(vRS==0)
      clrbit(PORTB,RS); //RS=’0’
   else
      setbit(PORTB,RS); //RS=’1’
   setbit(PORTB,RW); //RW=1
   nop;
   setbit(PORTB,E); //E=1;
   nop;
   nop;
   nop;
   nop;
   nop;
   data=PIND;
   clrbit(PORTB,E); //E=0
   nop;
   DDRD=0xff;
   return data;
}

void wr_LCDreg(unsigned char vRS, unsigned char data){
   DDRD=0xff;
   if(vRS==0)
      clrbit(PORTB,RS); //RS=’0’
   else
      setbit(PORTB,RS); //RS=’1’
   clrbit(PORTB,RW); //RW=0
   PORTD=data;
   nop;
   setbit(PORTB,E); //E=1;
   nop;
   nop;
   nop;
   clrbit(PORTB,E); //E=0
   nop;

}


void ckbf(){
   while(rd_LCDreg(SReg) & 1<<7){
   }
}

void initLCD(){
   ckbf();
   // Function set
   //bit 7 6 5 4   3 2 1 0
   //    0 0 1 DL  N F — — 
   //    0 0 1  1  1 1 0 0
   wr_LCDreg(IReg,0b00111100);

   ckbf();
   // entry mode set
   //bit 7 6 5 4   3 2 1   0
   //... 0 0 0 0   0 1 I/D s
   //    0 0 0 0   0 1 1   0
   wr_LCDreg(IReg,0b00000110);

   ckbf();
   // Display on/off control
   //bit 7 6 5 4   3 2 1 0
   // ...0 0 0 0   1 d c b  
   //    0 0 0 0   1 1 1 1
   wr_LCDreg(IReg,0b00001111);

   ckbf();
   //Clear display
   wr_LCDreg(IReg,0b00000001);
}

void sysinit(){
   PORTB = 0;
   DDRB  = 0b11100000;
   DDRD  = 0xff;
   wait(120000UL);
   initLCD();
}


void putchLCD(char ch){
   ckbf();
   wr_LCDreg(DReg,ch);

}

void putsLCD(char* ch){
   ckbf();
   while(*ch){
      putchLCD(*ch++);
   }
}

void clrLCD(){
   ckbf();
   wr_LCDreg(IReg,0b00000001);
}

void gotoLC(unsigned char line, unsigned char col){
   ckbf();
   if((line==1 || line ==2) && (col>0 && col <=16)){
      wr_LCDreg(IReg, 0x80 +0x40 *(line -1 )+ (col -1));
   }
   

}
 

char kbscan(){
   unsigned char cols;
   unsigned char temp = 0;
   unsigned char La=0, Ca=0;
   unsigned char cod_intern;
   char cod_extern;
   char tabela_trans[]="123A456B789C*0#D";

   for( DDRA = 1<<4; DDRA>0; DDRA <<=1 ) { 
      nop; nop; nop; nop; nop; nop; 
      cols=~PINA;
      cols &= 0b00001111;
      if(cols != 0){
         break;
      }   
   } //end for

   temp = DDRA;
   if(temp != 0){
      temp >>=4;
      while(temp){
         if(temp&1){
            break;
         }
         else{
            La++;
            temp>>=1;
         }
      }
      while(cols){
         if(cols&1){
            break;
         }
         else{
            Ca++;
            cols>>=1;
         }
      }
      cod_intern = La * 4 + Ca;
      cod_extern= tabela_trans[cod_intern];
      return cod_extern; 
   }
   else{
      return 0x7f; 
   }
}
